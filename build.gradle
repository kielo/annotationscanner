buildscript {
    repositories {
        jcenter()
        mavenCentral()
    }
    dependencies {
        classpath group: 'io.codearte.gradle.nexus', name: 'gradle-nexus-staging-plugin', version: '0.5.1'
        classpath group: 'com.bmuschko', name: 'gradle-nexus-plugin', version: '2.3.1'
    }
}

plugins {
    id 'java'
    id 'pl.allegro.tech.build.axion-release' version '1.4.0'
}

apply plugin: 'io.codearte.nexus-staging'

scmVersion {
    tag {
        prefix = 'annotationscanner'
    }
    versionCreator 'versionWithBranch'
}

allprojects {
    apply plugin: 'java'

    group = 'org.kielo.annotationscanner'
    version = scmVersion.version

    sourceCompatibility = 1.6
    targetCompatibility = 1.6

    repositories {
        mavenCentral()
    }

    ext.versions = [
            'polyjdbc'   : '0.2.2',
            'commonsLang': '2.6'
    ]

    dependencies {
        compile group: 'org.slf4j', name: 'slf4j-api', version: '1.7.5'
        compile group: 'eu.infomas', name: 'annotation-detector', version: '3.0.3'

        testCompile group: 'org.testng', name: 'testng', version: '6.8.1'
        testCompile group: 'org.mockito', name: 'mockito-all', version: '1.9.0'
        testCompile group: 'org.assertj', name: 'assertj-core', version: '1.5.0'
        testCompile group: 'com.googlecode.catch-exception', name: 'catch-exception', version: '1.2.0'

        testCompile group: 'ch.qos.logback', name: 'logback-core', version: '1.0.13'
        testCompile group: 'ch.qos.logback', name: 'logback-classic', version: '1.0.13'
    }

    test {
        useTestNG()

        test.testLogging {
            exceptionFormat 'full'
        }
    }


    if (JavaVersion.current().isJava8Compatible()) {
      tasks.withType(Javadoc) {
        options.addStringOption('Xdoclint:none', '-quiet')
      }
    }
}

subprojects {
    apply plugin: 'com.bmuschko.nexus'
    apply plugin: 'jacoco'

    modifyPom {
        project {
            name project.name
            description 'AnnotationScanner - simplifying API for Infomas ASL.'
            url 'http://annotationscanner.kielo.org'
            inceptionYear '2014'

            scm {
                url 'https://github.com/kielo/annotationscanner'
                connection 'scm:git@github.com:kielo/annotationscanner.git'
                developerConnection 'scm:git@github.com:kielo/annotationscanner.git'
            }

            licenses {
                license {
                    name 'The Apache Software License, Version 2.0'
                    url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                }
            }

            developers {
                developer {
                    id 'adam.dubiel'
                    name 'Adam Dubiel'
                }
            }
        }
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = '3.0'
}


nexusStaging {
    packageGroup = 'org.kielo'

    numberOfRetries = 15
    delayBetweenRetriesInMillis = 5000
}

